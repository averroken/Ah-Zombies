include ./header

head
    meta(charset='UTF-8')
    title Ah!Zombies |Â Game
    link(rel='stylesheet', href='public/css/uikit.almost-flat.min.css')
    link(rel='stylesheet', href='public/css/style.css')
    script(src='https://code.jquery.com/jquery-3.1.1.min.js', integrity='sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=', crossorigin='anonymous', defer='')
    script(src='public/js/uikit.min.js', defer='')
    script(src='public/js/components/form-password.min.js')
    script(type='text/javascript', src='public/game/js/phaser.js')
    script(type='text/javascript', src='public/game/js/Boot.js')
    script(type='text/javascript', src='public/game/js/Preload.js')
    script(type='text/javascript', src='public/game/js/Game.js')
    script(type='text/javascript', src='public/game/js/Game2.js')
    script(type='text/javascript', src='public/game/js/largeMapTest.js')
    script(type='text/javascript', src='public/game/js/room_1.js')
    script(type='text/javascript', src='public/game/js/room_2.js')
    script(type='text/javascript', src='public/game/js/room_3.js')
    script(type='text/javascript', src='public/game/js/room_4.js')
    script(type='text/javascript', src='public/game/js/room_5.js')
    script(type='text/javascript', src='public/game/js/room_6.js')
    script(type='text/javascript', src='public/game/js/room_7.js')
    script(type='text/javascript', src='public/game/js/room_8.js')
    script(type='text/javascript', src='public/game/js/mini_game.js')

.uk-alert.uk-alert-danger.uk-text-center.game_error(data-uk-alert='')
    p.uk-display-inline Currently Ah!Zombies only works on PC or screens larger than 800px. But we are working on the mobile version.

.uk-container.uk-container-center.uk-margin-top.uk-margin-large-bottom
    .my-container.uk-panel.uk-panel-box.uk-width-large-1-1.uk-width-small-1-1.uk-align-center
        .uk-animation-scale-up
            #game.game
        .uk-panel-box.uk-animation-scale-up
            .chat
                ul#messages
        form(action='#', method='GET', onsubmit='return false').uk-panel.uk-form
            fieldset
                .uk-form-row
                    .uk-form-controls
                        input#form-input-message.uk-display-block.uk-position-bottom.uk-width-1-1(type='text', placeholder='Message', required='')

include ./footer

script(type='text/javascript', src='public/game/js/main.js')
script(src='/socket.io/socket.io.js')
script(type='text/javascript').
    var socket = io();
    var idSet = false;
    var buddies = {};
    var myId;
    var game = TopDownGame.game;
    var message = document.getElementById('form-input-message');
    var messages = document.getElementById('messages');

    var objDiv = document.getElementById("messages");
    objDiv.scrollTop = objDiv.scrollHeight;

    socket.on('yourId', function (data) {
        setId(data.id);
    });

    socket.on('newBuddy', function (data) {
        console.log(player);
        console.log("data.id: " + buddies[data.id]);
        if (myId != data.id && !buddies[data.id] && data.x !== undefined) {
            console.log("NEW BUDDY");
            // // adding player
            console.log("x: " + data.x);
            console.log("y: " + data.y);
            test = game.add.sprite(50, 270, 'dude');
            //enable physics on player
            game.physics.arcade.enable(test);
            //giving the player physics properties
            test.body.bounce.y = 0.3;
            test.body.gravity.y = 300;
            test.body.collideWorldBounds = true;
            test.body.moves = false;
            //adding animations to player when walking
            test.animations.add('left', [0, 1, 2, 3], 10, true);
            test.animations.add('right', [5, 6, 7, 8], 10, true);
            test.id = data.id;
            // otherPlayers.add(test);
            buddies[data.id] = test;
        }
    });

    socket.on('message', function (msg) {
        console.log("qmlskdjflmqsk: " + msg);
        var li = document.createElement('li');
        var text = document.createTextNode(msg);
        li.appendChild(text);
        messages.append(li);
    });

    message.addEventListener('keydown', function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            sendMesssage();
        }
    });
    function setId(id) {
        if (!idSet) {
            console.log("my id:" + id);
            myId = id;
            idSet = true;
        }
    }

    function sendMesssage() {
        socket.emit('chat message', message.value);
        message.value = '';
    }