"use strict";var TopDownGame=TopDownGame||{},result;TopDownGame.room_1=function(){},TopDownGame.room_1.prototype={create:function(){this.createMap(),this.map.addTilesetImage("cute_lpc","dungeonTiles"),this.backgroundlayer=this.map.createLayer("backgroundLayer"),this.blockedLayer=this.map.createLayer("blockedLayer"),this.map.setCollisionBetween(1,2e3,!0,"blockedLayer"),this.backgroundlayer.resizeWorld(),this.count=0,result=this.findSpawnPoint("playerStart",this.map,"objectsLayer",this.position),this.player=this.game.add.sprite(result[0].x,result[0].y,"player"),this.player.id=Player.Id,console.log("My id: "+Player.Id),socket.emit("getPlayers"),console.log(Player.Map),socket.emit("moveMyPlayer",{id:this.player.id,x:this.player.x,y:this.player.y,map:Player.Map}),this.player.velocity=75,this.game.physics.arcade.enable(this.player),this.game.camera.follow(this.player),this.cursors=this.game.input.keyboard.createCursorKeys(),this.game.scale.fullScreenScaleMode=Phaser.ScaleManager.EXACT_FIT,this.game.input.onDown.add(this.gofull,this),this.createItems(),this.createDoors(),this.addGamePad()},gofull:function(){this.game.scale.isFullScreen?this.game.scale.stopFullScreen():this.game.scale.startFullScreen(!1)},createMap:function(){this.map=this.game.add.tilemap("room_1"),this.position||(this.position="down")},createItems:function(){console.log(this.map),this.items=this.game.add.group(),this.items.enableBody=!0;console.log(items.length),items.length>=0?console.log(items.length):(console.log("length new: :"+items.length),result=this.findObjectsByType("item",this.map,"objectsLayer"),items=result,socket.emit("setItemList",items,this.map.key)),console.log(this.items.length),items.forEach(function(e){this.createFromTiledObject(e,this.items)},this),console.log(this.items.length)},createDoors:function(){this.doors=this.game.add.group(),this.doors.enableBody=!0,result=this.findObjectsByType("door",this.map,"objectsLayer"),result.forEach(function(e){this.createFromTiledObject(e,this.doors)},this)},addGamePad:function(){this.gamepad=this.game.plugins.add(Phaser.Plugin.VirtualGamepad),this.joystick=this.gamepad.addJoystick(100,420,1.2,"gamepad"),this.button=this.gamepad.addButton(400,420,1,"gamepad")},findSpawnPoint:function(e,t,o,s){var i=new Array;if(!(i.length<0))return t.objects[o].forEach(function(o){var a=0;return void 0!=o.properties.offset&&(a=o.properties.offset),o.properties.spawnPoint!==s?void console.log("-------> spawn NOT point found --------------"):(console.log("-------> spawn point found"),void(o.properties.type===e&&(o.y-=t.tileHeight+45+a,i.push(o))))}),i},findObjectsByType:function(e,t,o){var s=new Array;if(!(s.length<0))return t.objects[o].forEach(function(o){var i=0;void 0!=o.properties.offset&&(i=o.properties.offset),o.properties.type===e&&(o.y-=t.tileHeight+45+i,s.push(o))}),s},createFromTiledObject:function(e,t){var o=t.create(e.x,e.y,e.properties.sprite);Object.keys(e.properties).forEach(function(t){o[t]=e.properties[t]})},collect:function(e,t){console.log(this.map);var o=this.map;"bluecup"!=t.sprite&&"greencup"!=t.sprite||(e.velocity=100),t.destroy(),items.forEach(function(e){if(e.x===t.position.x&&e.y===t.position.y){var s=items.indexOf(e);items.splice(s,1),console.log(items.length),console.log(o.key),socket.emit("updateItemList",items,o.key)}})},enterDoor:function(e,t){var o=t.targetTileMap.split("|");console.log("entering the door"),console.log("targetTileMap: "+o[0]),socket.emit("changeMap",o[0],Player.Id),TopDownGame.game.state.start(o[0]),console.log("entering the door"),console.log("targetTileMap: "+o[0]),console.log("targetSpawnPoint: "+o[1]),TopDownGame.game.state.states[o[0]].position=o[1],TopDownGame.game.state.start(o[0])},update:function(){this.logJoystick();var e=!1;this.player.body.velocity.y=0,this.player.body.velocity.x=0,this.cursors.up.isDown?(this.player.body.velocity.y-=this.player.velocity,e=!0):this.cursors.down.isDown&&(this.player.body.velocity.y+=this.player.velocity,e=!0),this.cursors.left.isDown?(this.player.body.velocity.x-=this.player.velocity,e=!0):this.cursors.right.isDown&&(this.player.body.velocity.x+=this.player.velocity,e=!0),this.game.physics.arcade.collide(this.player,this.blockedLayer),this.game.physics.arcade.overlap(this.player,this.items,this.collect,null,this),this.game.physics.arcade.overlap(this.player,this.doors,this.enterDoor,null,this),e&&(this.count++,this.count%2==0&&socket.emit("moveMyPlayer",{id:this.player.id,x:this.player.x,y:this.player.y,map:Player.Map}))},logJoystick:function(){this.joystick.properties.up&&console.log("JOYSTICK: up"),this.joystick.properties.down&&console.log("JOYSTICK: down"),this.joystick.properties.left&&console.log("JOYSTICK: left"),this.joystick.properties.right&&console.log("JOYSTICK: right")}};
//# sourceMappingURL=room_1.js.map
